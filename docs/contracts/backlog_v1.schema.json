{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Agile Backlog Schema",
  "description": "Schema for managing agile backlog in autonomous AI development",
  "type": "object",
  "required": ["epics"],
  "properties": {
    "epics": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": ["id", "name", "stories"],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^E-\\d+$",
            "description": "Epic identifier (e.g., E-100)"
          },
          "name": {
            "type": "string",
            "minLength": 5,
            "description": "Epic name"
          },
          "description": {
            "type": "string",
            "description": "Epic description and context"
          },
          "business_value": {
            "type": "string",
            "description": "Business value and rationale"
          },
          "stories": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "required": ["id", "title"],
              "properties": {
                "id": {
                  "type": "string",
                  "pattern": "^US-\\d+$",
                  "description": "User story identifier (e.g., US-101)"
                },
                "title": {
                  "type": "string",
                  "minLength": 10,
                  "description": "User story title in 'As a... I can... So that...' format"
                },
                "priority": {
                  "type": "string",
                  "enum": ["Low", "Medium", "High", "Critical"],
                  "description": "Story priority"
                },
                "story_points": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 21,
                  "description": "Story points (Fibonacci scale)"
                },
                "acceptance": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 1,
                  "description": "Acceptance criteria"
                },
                "technical_notes": {
                  "type": "string",
                  "description": "Technical implementation notes"
                },
                "dependencies": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "pattern": "^US-\\d+$"
                  },
                  "description": "Dependent user story IDs"
                },
                "autonomous_complexity": {
                  "type": "object",
                  "properties": {
                    "security_implications": {"type": "boolean"},
                    "performance_requirements": {"type": "boolean"},
                    "integration_complexity": {"type": "boolean"},
                    "data_modeling_needs": {"type": "boolean"}
                  },
                  "description": "Complexity indicators for autonomous AI planning"
                },
                "estimated_specialist_needs": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "sparc-security-architect",
                      "database-specialist", 
                      "performance-engineer",
                      "integration-specialist",
                      "security-reviewer",
                      "code-quality-specialist"
                    ]
                  },
                  "description": "Predicted specialist mode requirements"
                }
              },
              "additionalProperties": false
            }
          }
        },
        "additionalProperties": false
      }
    },
    "backlog_metadata": {
      "type": "object",
      "properties": {
        "last_updated": {
          "type": "string",
          "format": "date-time"
        },
        "total_story_points": {
          "type": "integer",
          "minimum": 0
        },
        "autonomous_readiness": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Percentage of stories ready for autonomous development"
        },
        "complexity_distribution": {
          "type": "object",
          "properties": {
            "security_stories": {"type": "integer"},
            "performance_stories": {"type": "integer"},
            "integration_stories": {"type": "integer"},
            "data_intensive_stories": {"type": "integer"}
          }
        }
      }
    }
  },
  "additionalProperties": false
}